datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Users {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  apiUrl       String
  accessKey    String
  secretKey    String
  streamUrl    String
  phone        String
  sendGridKey  String
  twilioSid    String
  twilioToken  String
  twilioPhone  String
  telegramBot  String
  telegramChat String
  pushToken    String
  refreshToken String   @db.LongText
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Symbols {
  symbol         String   @unique
  basePrecision  Int
  quotePrecision Int
  minNotional    String
  minLotSize     String
  isFavorite     Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Orders {
  id            Int         @id @default(autoincrement())
  automationId  Int
  symbol        String
  orderId       BigInt      @db.BigInt
  clientOrderId String      @unique
  transactTime  BigInt      @db.BigInt
  type          String
  side          String
  status        String
  isMaker       Boolean
  limitPrice    String
  stopPrice     String
  avgPrice      Decimal     @db.Decimal(18, 8)
  commission    String
  net           Decimal     @db.Decimal(18, 8)
  quantity      String
  icebergQty    String
  obs           String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  automation    Automations @relation(fields: [automationId], references: [id])
}

model Automations {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  symbol     String    @unique
  indexes    String
  conditions String
  schedule   String
  isActive   Boolean   @default(false)
  logs       Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  Orders     Orders[]
  Actions    Actions[]
  Grids      Grids[]
}

model withdrawTemplates {
  id               Int       @id @default(autoincrement())
  name             String    @unique
  coin             String    @unique
  amount           String
  amountMultiplier Decimal   @db.Decimal(10, 2)
  address          String
  addressTag       String
  network          String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  Actions          Actions[]
}

model OrderTemplates {
  id                   Int       @id @default(autoincrement())
  name                 String    @unique
  symbol               String    @unique
  type                 String
  side                 String
  limitPrice           String
  limitPriceMultiplier Decimal   @db.Decimal(10, 2)
  stopPrice            String
  stopPriceMultiplier  Decimal   @db.Decimal(10, 2)
  quantity             String
  quantityMultiplier   Decimal   @db.Decimal(10, 2)
  icebergQty           String
  icebergQtyMultiplier Decimal   @db.Decimal(10, 2)
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  Actions              Actions[]
  Grids                Grids[]
}

model Actions {
  id                 Int               @id @default(autoincrement())
  automationId       Int
  type               String
  orderTemplateId    Int
  withdrawTemplateId Int
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt
  orderTemplate      OrderTemplates    @relation(fields: [orderTemplateId], references: [id])
  withdrawTemplate   withdrawTemplates @relation(fields: [withdrawTemplateId], references: [id])
  automation         Automations       @relation(fields: [automationId], references: [id])
}

model Grids {
  id              Int            @id @default(autoincrement())
  automationId    Int
  orderTemplateId Int
  conditions      String
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  automation      Automations    @relation(fields: [automationId], references: [id])
  orderTemplate   OrderTemplates @relation(fields: [orderTemplateId], references: [id])
}

model Monitors {
  id             Int      @id @default(autoincrement())
  symbol         String   @unique @default("*")
  type           String   @unique
  broadcastLabel String
  interval       String   @unique
  indexes        String
  isActive       Boolean  @default(false)
  isSystemMon    Boolean  @default(false)
  logs           Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
